theory test_Lnv_cheating
imports "../Code_Interface"
begin
definition "firewall_chains = [''syn-flood'' \<mapsto> [Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (ProtoAny))) (Match (Extra (''limit: avg 1/sec burst 4'')))))))) (action.Return),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (ProtoAny))) (MatchAny)))))) (action.Drop)],
''INPUT'' \<mapsto> [Rule (MatchAnd (Match (IIface (Iface (''lo'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (ProtoAny))) (MatchAny)))))) (action.Accept),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp flags:0x17/0x02'')))))))) (Call (''syn-flood'')),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp flags:!0x17/0x02 state NEW'')))))))) (action.Drop),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4Addr ((131,159,207,206))))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (ProtoAny))) (MatchAny)))))) (action.Drop),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((10,0,0,0)) (8)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (ProtoAny))) (MatchAny)))))) (action.Drop),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((172,16,0,0)) (12)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (ProtoAny))) (MatchAny)))))) (action.Drop),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((192,168,0,0)) (16)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (ProtoAny))) (MatchAny)))))) (action.Drop),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((224,0,0,0)) (4)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (ProtoAny))) (MatchAny)))))) (action.Drop),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((240,0,0,0)) (5)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (ProtoAny))) (MatchAny)))))) (action.Drop),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((127,0,0,0)) (8)))) (MatchAnd (Match (Prot (ProtoAny))) (MatchAny)))))) (action.Drop),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4Addr ((131,159,207,255))))) (MatchAnd (Match (Prot (ProtoAny))) (MatchAny)))))) (action.Drop),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4Addr ((131,159,254,1))))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto UDP))) (Match (Extra (''udp spt:53 state ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4Addr ((131,159,254,2))))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto UDP))) (Match (Extra (''udp spt:53 state ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp spt:22 state ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp spt:80 state ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp spt:443 state ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp spt:23 state ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp spt:21 state ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp spt:20 state RELATED,ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp spts:1024:65535 dpts:1024:65535 state ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp spt:25 state ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp dpt:113 reject-with tcp-reset'')))))))) (action.Reject),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Extra (''Prot icmp''))) (Match (Extra (''state RELATED,ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto UDP))) (Match (Extra (''LOG flags 0 level 4 prefix IPTABLES UDP-IN: '')))))))) (action.Log),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto UDP))) (MatchAny)))))) (action.Drop),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Extra (''Prot icmp''))) (Match (Extra (''LOG flags 0 level 4 prefix IPTABLES ICMP-IN: '')))))))) (action.Log),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Extra (''Prot icmp''))) (MatchAny)))))) (action.Drop),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''LOG flags 0 level 4 prefix IPTABLES TCP-IN: '')))))))) (action.Log),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (MatchAny)))))) (action.Drop),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (ProtoAny))) (Match (Extra (''LOG flags 0 level 4 prefix IPTABLES PROTOCOL-X-IN: '')))))))) (action.Log),
Rule (MatchAnd (Match (IIface (Iface (''wlan0'')))) (MatchAnd (Match (OIface (IfaceAny))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (ProtoAny))) (MatchAny)))))) (action.Drop),
Rule (MatchAny) (action.Drop)],
''FORWARD'' \<mapsto> [Rule (MatchAny) (action.Drop)],
''OUTPUT'' \<mapsto> [Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''lo'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (ProtoAny))) (MatchAny)))))) (action.Accept),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4Addr ((131,159,254,1))))) (MatchAnd (Match (Prot (Proto UDP))) (Match (Extra (''udp dpt:53 state NEW,ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4Addr ((131,159,254,2))))) (MatchAnd (Match (Prot (Proto UDP))) (Match (Extra (''udp dpt:53 state NEW,ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp dpt:22 state NEW,ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp dpt:80 state NEW,ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp dpt:443 state NEW,ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp dpt:23 state NEW,ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp dpt:21 state NEW,ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp dpt:20 state ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp spts:1024:65535 dpts:1024:65535 state RELATED,ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''tcp dpt:25 state NEW,ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto UDP))) (Match (Extra (''udp spts:32769:65535 dpts:33434:33523 state NEW'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Extra (''Prot icmp''))) (Match (Extra (''state NEW,RELATED,ESTABLISHED'')))))))) (action.Accept),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto UDP))) (Match (Extra (''LOG flags 0 level 4 prefix IPTABLES UDP-OUT: '')))))))) (action.Log),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto UDP))) (MatchAny)))))) (action.Drop),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Extra (''Prot icmp''))) (Match (Extra (''LOG flags 0 level 4 prefix IPTABLES ICMP-OUT: '')))))))) (action.Log),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Extra (''Prot icmp''))) (MatchAny)))))) (action.Drop),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (Match (Extra (''LOG flags 0 level 4 prefix IPTABLES TCP-OUT: '')))))))) (action.Log),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (Proto TCP))) (MatchAny)))))) (action.Drop),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (ProtoAny))) (Match (Extra (''LOG flags 0 level 4 prefix IPTABLES PROTOCOL-X-OUT: '')))))))) (action.Log),
Rule (MatchAnd (Match (IIface (IfaceAny))) (MatchAnd (Match (OIface (Iface (''wlan0'')))) (MatchAnd (Match (Src (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Dst (Ip4AddrNetmask ((0,0,0,0)) (0)))) (MatchAnd (Match (Prot (ProtoAny))) (MatchAny)))))) (action.Drop),
Rule (MatchAny) (action.Drop)]]"
end
