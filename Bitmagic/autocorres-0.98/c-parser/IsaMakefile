#
# Copyright (C) 2014 NICTA
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions, and the following disclaimer,
#    without modification.
#
# 2. Redistributions in binary form must reproduce at minimum a disclaimer
#    substantially similar to the "NO WARRANTY" disclaimer below
#    ("Disclaimer") and any redistribution must be conditioned upon
#    including a substantially similar Disclaimer requirement for further
#    binary redistribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGES.
#

# Path to our directory.
ifndef CPARSER_PFX
CPARSER_PFX := $(realpath $(dir $(lastword $(MAKEFILE_LIST))))
endif

# Path to "map_sep" directory.
ifndef MAPPED_SEP_PFX
MAPPED_SEP_PFX = $(realpath $(CPARSER_PFX)/../map_sep/logic)
endif

# Include SML compiler configuration.
include $(CPARSER_PFX)/globalmakevars

# All targets.
all: CParser cparser_test cparser_tools

# Build tools
cparser_tools: $(CPARSER_PFX)/standalone-parser/c-parser \
	$(CPARSER_PFX)/standalone-parser/tokenizer

# Setup heaps we use.
HEAPS += Simpl-VCG CParser

# Setup rules for the heaps.
$(HEAPS): .FORCE
	$(ISABELLE_TOOL) build -d .. -b -v $@
.PHONY: $(HEAPS)

#
# cparser_test: Execute a large number of testcases in the "testfiles"
# directory.
#
# We dynamically generate a ROOT file containing all the test files, and
# then build it using Isabelle.
#
cparser_test: testfiles/ROOT .FORCE
	$(ISABELLE_TOOL) build -d .. -d testfiles -b -v CParserTest
all_tests.thy: testfiles testfiles/*.c ../misc/gen_isabelle_root.py
	python ../misc/gen_isabelle_root.py -T -o $@ -b CParser -i testfiles

GRAMMAR_PRODUCTS = l4c.lex.sml l4c.grm.sml l4c.grm.sig

include $(CPARSER_PFX)/standalone-parser/Makefile
include $(CPARSER_PFX)/Makefile

# Regression targets.
report-regression:
	@echo CParser cparser_test cparser_tools

.FORCE:

.PHONY: all cparser_test .FORCE report_regression cparser_tools

